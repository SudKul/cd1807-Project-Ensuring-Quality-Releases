name: Azure Pipelines

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main

# ToDo: Replace the agent pool name, if you are using Udacity Cloud lab. 
# Otherwise comment out the line below. 
pool: myAgentPool

variables:
  python.version: '3.7.6'
  # ToDo: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: 'myServiceConnection'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Environment name
  environmentName: 'test'
  ARM_THREEPOINTZERO_BETA_RESOURCES=true

stages:
- stage: Build
  jobs:
  - job: BuildInfrastructure
    steps:
    # Install Terraform on the pipeline agent 
    - task: TerraformInstaller@0
      displayName: 'Terrafom installation'
      inputs:
        terraformVersion: '0.12.24'
    
    # Run Terraform Init on the pipeline agent 
    # ToDo: Replace the resource group name, storage account name, and container name below
    - task: TerraformTaskV3@3
      displayName: 'Terrafom init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        backendServiceArm: '$(azureServiceConnectionId)'
        backendAzureRmResourceGroupName: 'Azuredevops'
        backendAzureRmStorageAccountName: 'tfstate281845088'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'test.terraform.tfstate'

    # Run Terraform Validate    
    - task: TerraformTaskV3@3
      displayName: Terraform validate
      inputs:
        provider: 'azurerm'
        command: 'validate'

    # Upload SSH public key and private key file for Terraform VM deployment
    # - task: InstallSSHKey@0
    #   inputs:
    #     knownHostsEntry: '13.90.102.168 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDROqEz5ZuxZi6Xd/p5678hgts9hvta2bsJhF6wfCryk0wBXV76wGzcE9f+udY/RNEcSPgiPqpdepLj8fmFRLrQWvO1G3c3r9Zyzqb/Ac0h7YcMI8QkgzsyEBVGvrpk+49uKdz04Qac/XkoMUmjM6i2U3l0mBTzsJfJ39O46f42XLrrku8Oq84lVFCoY/OtGtY41n9eaQ4JBYB6Sx3XIkJgGnqSZbhhFCvqaEZrD0CIn6T+7+DLT//+99ke89g7W+1/osLjnHuMcvzGrAaODv8gCcm8Qrq30i//up1XII1n7PLMLV+oBxtI6P/7Vpu303Gn6J8CUrEARdeBdH7DvqrpoII7bvJjH786NPPOqp8dxX4kh7fN3oBF3EXUwrdnnCLmEqmIKRsFMt74pyTKcdw+QKkZqMnVOocapOMUEjK4JVRMwuZZcQNS26Btc3tDXAMuW7g5lf/yoWsFqzu/dPlvtaH7OFKn+NlTWpvXMaKZy1eg/dEpIDvum4KPUT3xYEs= devopsagent@myLinuxVM'
    #     sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDROqEz5ZuxZi6Xd/p5678hgts9hvta2bsJhF6wfCryk0wBXV76wGzcE9f+udY/RNEcSPgiPqpdepLj8fmFRLrQWvO1G3c3r9Zyzqb/Ac0h7YcMI8QkgzsyEBVGvrpk+49uKdz04Qac/XkoMUmjM6i2U3l0mBTzsJfJ39O46f42XLrrku8Oq84lVFCoY/OtGtY41n9eaQ4JBYB6Sx3XIkJgGnqSZbhhFCvqaEZrD0CIn6T+7+DLT//+99ke89g7W+1/osLjnHuMcvzGrAaODv8gCcm8Qrq30i//up1XII1n7PLMLV+oBxtI6P/7Vpu303Gn6J8CUrEARdeBdH7DvqrpoII7bvJjH786NPPOqp8dxX4kh7fN3oBF3EXUwrdnnCLmEqmIKRsFMt74pyTKcdw+QKkZqMnVOocapOMUEjK4JVRMwuZZcQNS26Btc3tDXAMuW7g5lf/yoWsFqzu/dPlvtaH7OFKn+NlTWpvXMaKZy1eg/dEpIDvum4KPUT3xYEs= devopsagent@myLinuxVM'
    #     sshKeySecureFile: 'id_rsa'
    
    # Run Terraform Apply
    # ToDo: Change the workingDirectory path, as applicable to you
    - task: TerraformTaskV3@3
      displayName: Terraform apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
